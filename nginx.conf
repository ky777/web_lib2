
#user  nobody;
#worker_processes  1;
worker_processes  5;

error_log  logs/error.log;
error_log  logs/error.log  notice;
error_log  logs/error.log  info;

pid        logs/nginx.pid;


events {
    worker_connections  1024;
}

#2.	Сконфигурируйте nginx сервер таким образом, чтобы запросы проходили 
#через nginx и перенаправлялись на сервер из лабораторной работы №1.
#http {
#    server{
#    listen 80;
#    server_name localhost;
#    location / {
#      proxy_pass http://127.0.0.1:3002; 
#    }
#    }
#}
#####################################################################
#3.	Используйте nginx отдачи статического контента. 
#Как изменилось время ответа сервера?
#http {
#    server{
#    listen 80;
#    server_name localhost;
#    location /test/ {
#    		root C:/LAB2/nginx/html;
#            index  index.html index.htm;
#    }
#}
#}
###########################################################################
#4.	Настройте кеширование и gzip сжатие файлов.  Как изменилось время ответа сервера?
#http {
#    gzip  on;# a)gzip сжатие
#    gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;
#
#    proxy_cache_path C:/LAB2/nginx/cache levels=1:2 keys_zone=all:32m max_size=1g; # b) Кэширование
#server {
#        listen 80;
#        server_name localhost;
#        location / {
#                proxy_pass http://localhost:81/;
#                proxy_cache all;
#                proxy_cache_valid any 1h;
#        }
#}
#server {
#        listen 81;
#        server_name localhost;
#        location / {
#                proxy_pass http://localhost:3002;
#        }
#}
#}
###############################################################################################
#5.	Запустите еще 2 инстанса вашего сервера из лабораторной работы №1, 
#настройте перенаправление таким образом, чтобы на 
#серверы приходили запросы в соотношении 3:1. 
#http {
#upstream backend  {
#  server localhost:3002;
#  server localhost:3003;
#  server localhost:3004;
#}
#server {
#    listen 80;
#    server_name localhost;
#  location / {
#    proxy_pass  http://backend;
#  }
#}
#}
########################################################################################################
#6.	 Напишите еще два мини-сервера. Каждый из них должен обрабатывать два GET-запроса.
#a.	по / отдавать страницу с надписью “Добро пожаловать на сервис #1/#2” и ссылкой, ведущей на /temp
#b.	по /temp  возвращать произвольный контент
#Настройте nginx так, чтобы в дополнение к п.1-5 он перенаправлял запросы по     url /service1 и /service2 на соответствующие сервера. 
#http {
#    server{
#    listen 80;
#    server_name localhost;
#    location /service1/ {
#        proxy_pass http://127.0.0.1:3005/;
#        proxy_set_header Host http://127.0.0.1:3005;
#    }
#    location /service2/ {
#        proxy_pass http://127.0.0.1:3007/;
#        proxy_set_header Host http://127.0.0.1:3007;
#    }
#    }
#}
######################################################################
#7.	Настройте отдачу страницы о состоянии сервера
#       a.	nginx status
#http {
#    server{
#    listen 80;
#    server_name localhost;
#    location /status {
#        stub_status on;
#        access_log off;
#        allow 127.0.0.1;
#        deny all;
#    }
#}
#}
http {
    # a)gzip сжатие    
    gzip  on;
    # b) Кэширование
    proxy_cache_path C:/LAB2/nginx/cache levels=1:2 keys_zone=all:32m max_size=1g; 

upstream backend  {
  server localhost:3002 weight=3;
  server localhost:3003 weight=1;
  server localhost:3004 weight=1;
}
server {
        listen 80;
        server_name localhost;
        location / {
                proxy_pass http://127.0.0.1:81;
                proxy_cache all;
                proxy_cache_valid any 1h;
        }
}
server {
        listen 81;
        server_name localhost;
        location / {
                proxy_pass http://127.0.0.1:3001;
                proxy_set_header Host http://127.0.0.1:3001;
        }
        location /test/ {
    		root C:/LAB2/nginx/html;
            index  index.html index.htm;
        }
        location /be/ {
        proxy_pass  http://backend/;
        proxy_set_header Host http://backend/;
        }
         location /service1/ {
         proxy_pass http://127.0.0.1:3005/;
        proxy_set_header Host http://127.0.0.1:3005/;
        }
    location /service2/ {
        proxy_pass http://127.0.0.1:3007/;
        proxy_set_header Host http://127.0.0.1:3007/;
        }
        location /status {
        stub_status on;
        access_log off;
        allow 127.0.0.1;
        deny all;
    }
    }
}
